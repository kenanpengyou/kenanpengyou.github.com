<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>acgtofe - 动漫与前端技术的综合博客</title>
 <link href="http://acgtofe.com/atom.xml" rel="self"/>
 <link href="http://acgtofe.com"/>
 <updated>2013-04-03T21:51:06+08:00</updated>
 <id>http://acgtofe.com</id>
 <author>
   <name>Liang Zhu</name>
   <email>kenanpengyou@gmail.com</email>
 </author>

 
 <entry>
   <title>jQuery使用的最佳实践</title>
   <link href="http://acgtofe.com/posts/2013/04/jquery-best-practice"/>
   <updated>2013-04-03T00:00:00+08:00</updated>
   <id>http://acgtofe.com/posts/2013/04/jquery-best-practice</id>
   <content type="html">&lt;h2&gt;引言&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;jQuery&lt;/em&gt;可以说是web开发领域应用最为广泛的轻量级javascript库，不仅专业的web开发者使用它，很多刚入门的web开发者或者web爱好者也通过使用jQuery轻松地融入到了javascript的开发。&lt;/p&gt;

&lt;p&gt;而如果你还希望在这方面做得更好，就应学习和了解最佳实践。&lt;em&gt;最佳实践&lt;/em&gt;（&lt;em&gt;Best Practice&lt;/em&gt;）是随某一技术领域的发展而逐渐建立起来的关于最新技术和开发方法的信息，在web开发领域也非常有用。&lt;/p&gt;

&lt;p&gt;本文内容参考了杰出前端工程师 &lt;a href=&quot;http://addyosmani.com/blog/&quot; title=&quot;Addy Osmani&quot;&gt;Addy Osmani&lt;/a&gt; 的 &lt;a href=&quot;https://speakerdeck.com/addyosmani/jquery-performance-tips-tricks&quot; title=&quot;jQuery Performance TIPs &amp;amp; Tricks&quot;&gt;jQuery Performance TIPs &amp;amp; Tricks&lt;/a&gt; ，如果有兴趣，你也可以自己看看这位大师的这个演说PPT，Addy Osmani本人也是jQuery的核心团队（jQuery Core teams）的成员之一。&lt;/p&gt;

&lt;h2&gt;为什么需要遵循jQuery最佳实践&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;web开发领域对于性能的追求是永不停滞的&lt;/em&gt;。jQuery虽然是非常强大的开发工具，但不当的使用方法仍会给浏览器带来额外的工作和负担，也会使开发的web应用占用更多的系统资源，运行起来也更慢。而我们都知道，好的web应用需要的是清爽灵活。&lt;/p&gt;

&lt;p&gt;如何判断javascript的性能呢？现在，这种性能测试都可以归纳为运行速度，简单的说，&lt;em&gt;同一项功能，某一种写法如果比另一种写法运行起来更快，那么这种写法就可以实现更好的性能&lt;/em&gt;。当然，这里只单纯从性能角度来考虑，并不包含代码的可维护性。如果你想自己测试不同的javascript代码段的性能，推荐使用 &lt;a href=&quot;http://jsperf.com/&quot; title=&quot;jsperf.com&quot;&gt;jsPerf.com&lt;/a&gt; ，这个站点可以帮助你轻松创建javascript性能测试用例，还可以保存和分享测试结果。jQuery团队也使用它进行javascript性能测试。&lt;/p&gt;

&lt;h2&gt;jQuery使用建议&lt;/h2&gt;

&lt;h3&gt;1.使用最新版&lt;/h3&gt;

&lt;p&gt;新版本的jQuery提供的API会在性能上有所提升，而且修复了一些存在的bug。由于非常多的网站都在使用jQuery，所以jQuery每一个新版本的更改都会经过非常严格的测试，升级一般都不会带来问题。&lt;/p&gt;

&lt;p&gt;此外，新版本的jQuery可能会在API上做非常有用的改动，让开发工作更加简单。比如在jQuery 1.7之前，事件绑定使用&lt;code&gt;bind()&lt;/code&gt;、&lt;code&gt;delegate()&lt;/code&gt;以及&lt;code&gt;live()&lt;/code&gt;这几个方法。虽然都是事件绑定，但每个方法各有针对，这就产生了“什么时候应该使用哪个”的麻烦事。而从jQuery 1.7开始，新增并推荐使用&lt;code&gt;on()&lt;/code&gt;和&lt;code&gt;off()&lt;/code&gt;这2个方法来完成所有的事件绑定与移除，理解起来就要容易多了。&lt;/p&gt;

&lt;h3&gt;2.理解你的选择符&lt;/h3&gt;

&lt;p&gt;在jQuery中，不是所有的选择符（Selectors）都是同等性能的。也就是说，虽然某一些元素你可以用很多种不同的选择符写法来选取，但不要认为它们在性能上也是一样的。&lt;/p&gt;

&lt;p&gt;jQuery的选择符的运行速度是不同的，从最快到最慢依次是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ID选择符（&lt;code&gt;$(#ElementId)&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;元素选择符（&lt;code&gt;$(form)&lt;/code&gt;，&lt;code&gt;$(input)&lt;/code&gt;等）&lt;/li&gt;
&lt;li&gt;Class选择符（&lt;code&gt;$(.someClass)&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;伪类和属性选择符（&lt;code&gt;$(:hidden)&lt;/code&gt;，&lt;code&gt;$([attribute=value])&lt;/code&gt;等）&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;由于浏览器支持的原生DOM操作方法（比如&lt;code&gt;document.getElementById()&lt;/code&gt;）就可用，所以ID选择符和元素选择符是最快的。而稍慢的Class选择符是因为IE6-IE8不支持原生的&lt;code&gt;getElementsByClassName()&lt;/code&gt;，而在支持这个原生方法的其他现代浏览器中，Class选择符仍是很快的。&lt;/p&gt;

&lt;p&gt;至于最慢的伪类和属性选择符，则是因为浏览器并不提供对应功能的可用原生方法。尽管jQuery尝试了使用&lt;code&gt;querySelector()&lt;/code&gt;和&lt;code&gt;querySelectorAll()&lt;/code&gt;这两个原生选择符API（属于css查询API）来提升部分jQuery选择符在部分现代浏览器中的性能，但综合起来，仍然是比较慢的。当然，这也是在于jQuery对伪类和属性选择符这个API要求较高，不仅要支持&lt;code&gt;input[type=&quot;text&quot;]&lt;/code&gt;这种css中合法的选择符，还要支持&lt;code&gt;p:first&lt;/code&gt;这类用于元素过滤，但在css中不合法的选择符。总之，jQuery的伪类和属性选择符功能很强大，但请慎重使用。&lt;/p&gt;

&lt;h3&gt;3.缓存你操作的元素&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;parents&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;parents&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.child&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//bad&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;缓存是指保存jQuery选择符的返回结果，方便之后再次调用。每一个&lt;code&gt;$('.whatever')&lt;/code&gt;都会重新从DOM中搜索并返回一个jQuery包装集（jQuery collection），因此要避免重复使用。&lt;/p&gt;

&lt;p&gt;原生javascript中，建立局部变量来缓存数据或对象，有利于精简代码、优化性能。这里也是一样的道理。&lt;/p&gt;

&lt;h3&gt;4.链式语法&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.parents&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doSomethingElse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;jQuery中大部分方法都返回jQuery包装集并支持这种链式语法。javasript的性能优化要点之一是最小化语句数，因此链式语法不仅写起来更容易，运行起来也会更快。&lt;/p&gt;

&lt;h3&gt;5.使用事件代理&lt;/h3&gt;

&lt;p&gt;利用事件冒泡，指定一个位于dom较高层级的元素（比如&lt;code&gt;document&lt;/code&gt;）的事件处理程序，就可以管理某一类型的所有事件。减少了页面中添加的事件处理程序，自然可以提升整体性能。&lt;/p&gt;

&lt;h3&gt;6.最小化现场更新&lt;/h3&gt;

&lt;p&gt;如果你进行操作的DOM部分是已经显示的页面的一部分，那么你就是在进行一个&lt;em&gt;现场更新&lt;/em&gt;。现场更新需要浏览器重新计算尺寸，涉及到重绘（repaint）和回流（reflow），有较高的性能花费，因此应减少使用。&lt;/p&gt;

&lt;p&gt;在新增内容时，建议先把要新增的代码段合并完全，最后再使用单个&lt;code&gt;append()&lt;/code&gt;方法添加到页面。而如果元素存在复杂的交互，比如反复地添加和移除，&lt;code&gt;detach()&lt;/code&gt;这个针对性的方法就是最佳的选择。&lt;/p&gt;

&lt;h3&gt;7.不在不必要的时候使用jQuery方法&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.nav_link&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;nav id: &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//bad&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;jQuery方法不一定是最好的方法。这里使用&lt;code&gt;$(this).attr('id')&lt;/code&gt;获取当前事件元素的ID，为当前事件元素创建了jQuery包装集，然后调用&lt;code&gt;attr()&lt;/code&gt;属性获取方法。但这都是额外的性能花费。事实上，&lt;code&gt;this&lt;/code&gt;在事件函数内就表示当前事件元素，直接使用&lt;code&gt;this.id&lt;/code&gt;就可以获取元素ID，这种原生DOM属性的写法要更快。&lt;/p&gt;

&lt;h3&gt;8.适当使用jQuery工具函数&lt;/h3&gt;

&lt;p&gt;操作jQuery包装集的方法（也就是写在&lt;code&gt;$.fn&lt;/code&gt;中的方法），其中一部分也有作为jQuery工具函数（直接写在&lt;code&gt;$&lt;/code&gt;中的方法）的同类方法。由于jQuery工具函数在使用中不涉及创建jQuery包装集，因此，在部分情况下，可以通过换用jQuery工具函数提升性能。&lt;/p&gt;

&lt;p&gt;比如，在DOM中存储数据，一般的做法是：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#elem&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//common way&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但改为下边的写法会快很多：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//significantly faster&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;需要的注意的是，虽然下面这种方法更快，但作为参数传入的元素不能用选择符，而要用元素本身。&lt;/p&gt;

&lt;h2&gt;结语&lt;/h2&gt;

&lt;p&gt;我自己整理和写本文内容时，也感觉很有收获。jQuery是一个很强大的工具，但进一步说，也只提供了web开发的最基本的内容，更高级更复杂的内容，还需要自己不断学习和创作。在这个过程中，遵循最佳实践，养成良好的习惯，会有很大的益处，并逐渐做得更出色！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>社会秩序与人类意志的选择—PSYCHO-PASS分析与感想</title>
   <link href="http://acgtofe.com/posts/2013/03/thoughts-of-psycho-pass"/>
   <updated>2013-03-26T00:00:00+08:00</updated>
   <id>http://acgtofe.com/posts/2013/03/thoughts-of-psycho-pass</id>
   <content type="html">&lt;p&gt;在不久的未来，随着科学的不断进步，人类灵魂的秘密也被揭开，社会也由此发生了革命性的变化。人类的心理状态与性格倾向都可以测量并数值化，所有的心理倾向都被记录和管理，这其中可以成为每个人的灵魂的判定标准的测量数值，被人们称为&lt;em&gt;PHYCHO-PASS&lt;/em&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/used-images/posts/201303/psycho_pass_title.jpg&quot; title=&quot;PSYCHO-PASS&quot; alt=&quot;PSYCHO-PASS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;建立在这种心灵测量数值的基础之上的，被称为&lt;em&gt;西比拉系统&lt;/em&gt;（&lt;em&gt;SIBYL SYSTEM&lt;/em&gt;）的社会管理系统，则通过对社会的每一个人的PHYCHO-PASS进行分析和管理，读取每个人的心理的愿望，个体能力及职业适应性，为每一个人给出最适合的生活方式，并以此建立了一个较为理想和稳定的社会。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/used-images/posts/201303/mental_color.jpg&quot; title=&quot;色相&quot; alt=&quot;色相&quot; /&gt;&lt;/p&gt;

&lt;p&gt;PHYCHO-PASS的信息的视觉化，反映为&lt;em&gt;色相&lt;/em&gt;，心理状态良好，色相则趋向于白色，心理状态消极，色相则趋于黑色。在色相健康的情况下，PHYCHO-PASS中的信息之一，称为&lt;em&gt;犯罪系数&lt;/em&gt;，会维持在较低的状态。因为某些原因犯罪系数上升，则会被要求接受心理治疗。而当犯罪系数超过指定数值，则会被认定为犯罪者或潜在犯罪者。&lt;/p&gt;

&lt;p&gt;在这个社会，公安局是最为重要的秩序核心。它的刑事科成员，由&lt;em&gt;监视官&lt;/em&gt;和&lt;em&gt;执行官&lt;/em&gt;组成的队伍，则担负着抓捕或处决犯罪者及潜在犯罪者，维护社会治安的重要责任。PHYCHO-PASS的故事由此展开。&lt;/p&gt;

&lt;h2&gt;监视官和执行官&lt;/h2&gt;

&lt;p&gt;大雨，被封锁的案件现场。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;“我是即日起被配属到刑事科的常守朱,请多多指教...”&lt;/p&gt;

&lt;p&gt;“抱歉，我们刑事科现在非常缺人，没工夫把你作为新人看待了。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;由此，常守朱成为刑事科一班的第二位监视官，和宜野座伸元监视官一同，带领狡啮慎也、征陆智己、滕秀星和六合冢弥生四位执行官作为刑事科一班执行任务。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;监视官&lt;/em&gt;，如字面意义所示，对执行官进行监控，指挥，并对执行官的行为负责。监视官必须有良好的精神状态，犯罪系数也必须在规定范围内。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/used-images/posts/201303/official_logo.png&quot; title=&quot;公安局刑事科&quot; alt=&quot;公安局刑事科&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;“接下来将要见的家伙们，可不要当做一样的人类来看待。他们是PSYCHO-PASS的犯罪系数超过规定数值的人格破裂者，他们本应作为潜在罪犯而被隔离，唯一允许他们进行的社会活动，就是抓获同为犯罪者的人。他们是猎犬，是为狩猎野兽而存在的野兽，他们便是执行官。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;执行官&lt;/em&gt;是监视官的下属，必须在监视官的陪同下才可以行动，是执行任务的最前线的人。和作为目标的犯罪者有同样气息的他们，更有能力找到和抓捕犯罪者。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;“犯罪或者制止犯罪，无论选择哪条路都需要犯罪的才能。……因此才会有我们这些接脏活的猎犬。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;监视官和执行官使用的警用枪械—&lt;em&gt;Dominator&lt;/em&gt;（&lt;em&gt;支配者&lt;/em&gt;），具有严格的使用者及目标的识别系统，在枪口瞄准的时候即可测得目标的犯罪系数，只有犯罪系数超过指定值的犯罪者或潜在犯罪者，才会解除保险允许射击。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/used-images/posts/201303/banner_dominator.jpg&quot; title=&quot;Dominator&quot; alt=&quot;Dominator&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;犯罪认知&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;“犯罪系数，265，确认为执行对象，解除安全限制。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;依靠西比拉系统，案件处理只需要检测犯罪嫌疑人的犯罪系数，就可以断定出犯罪者。此外，在公共区域常设的色相扫描仪，以及巡视的无人机，也会监测每一个人的犯罪系数，随时向公安局报告异常。&lt;/p&gt;

&lt;p&gt;任何人有过涉及犯罪的行为，或者有犯罪倾向，这些原本深藏于人类内心的信息现在却可以被侦测出。基于这种心灵辨识系统，社会拥有了针对犯罪行为的革命性的控制力。&lt;/p&gt;

&lt;p&gt;但是，许多问题的根源也在此。&lt;/p&gt;

&lt;h2&gt;人生设计&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;“能者成能事，这正是西比拉为人类带来的恩惠。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;我们常说，当所有的东西都在正确的位置的时候，一切都可以平稳运行。西比拉系统测定每个人的个体能力，并给出每个人对应的适合的职业。每个人都不必再困惑于做这些选择，西比拉系统针对每个人所给出的答案，就是这个人正确的、会过得快乐的生活方式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/used-images/posts/201303/banner_city.jpg&quot; title=&quot;城市&quot; alt=&quot;城市&quot; /&gt;&lt;/p&gt;

&lt;p&gt;那么，当一切依托于西比拉系统的时候，西比拉系统本身就必须要求&lt;em&gt;完美&lt;/em&gt;。然而，正如自然界的一般规律，西比拉系统也无法做到完美。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;“对将来毫无期待的人生，你们这些被系统祝福的人是不会明白的。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;依照西比拉系统的认定，每个人的个体能力都不相同，优秀的人可以有很多机会，可以从事更多更好的工作，而不被系统认可的人则直接被否决了从事许多工作的可能性，无论这些人自身有多么期望做其他的自己想做的工作。这种差别对待让一部分人对系统抱有怨恨，并感慨“神是不公平的“。但是，这也实际上是任何阶级社会都必然存在的问题。&lt;/p&gt;

&lt;h2&gt;人类意志&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;&quot;我啊，认为人们只有在依靠自身意志行动时才拥有价值，所以，我才追寻各种各样的人的潜在想法，并观察他们的行为。&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;西比拉系统的判定在社会总体上为人类带来恩惠的同时，却也忽略了人类的&lt;em&gt;个人意志&lt;/em&gt;。槙岛圣护这位谜一样的男子，策划并诱导了一系列犯罪案件，并希望能通过研究这个社会中的犯罪者们的心理，获取人类意志的秘密，以此肯定人类的存在价值。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;“换做是没有西比拉诊断的时代，能不能幸福可是得看运气来的，和以前比起来要好多了吧。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;在这个社会里，当人们面临各种选择的时候，都会倾向于依靠西比拉系统的判定，而无需烦恼于如何做选择。依照西比拉系统的判定去做，自身会过得更幸福，社会也能获得繁荣和稳定。但是，所谓幸福的定义是什么，人生的意义又是什么？在某些人看来，不以自己的个人意志来决定自己的人生，就无法实现幸福和人生意义。自己是应该按照自己所希望的方式活着，还是应该考虑到“为了这个社会好”而遵从社会所希望的自己的方式活着？&lt;/p&gt;

&lt;h2&gt;免罪体质&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;“如果存在能够制裁我的人，那一定是可以凭借自身意志杀人的人。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;免罪体质&lt;/em&gt;，指的是PSYCHO-PASS扫描仪的测量值和犯罪心理并不一致的特殊案例，人数极少，而且这个概念本身是公安局的高层机密。本质而言，是免罪体质者的PSYCHO-PASS无法被西比拉系统解析，因此也就无法被西比拉系统管理，因此也称为特异者。拥有免罪体质的槙岛圣护，自出生起，无论何种情况下，犯罪系数都不会高于指定数值，色相也一直维持纯白的状态。&lt;/p&gt;

&lt;p&gt;免罪体质者永远不会被西比拉系统认定为犯罪者。这些免罪体质者的存在，令人不得不对西比拉系统抱有怀疑和敌意。而槙岛圣护自己，正如狡啮慎也所说，并不把这看做是一种特权，相反，槙岛圣护因为自己无法被西比拉系统解析并纳入社会管理，有着强烈的孤独感，不能被纳入社会，也就是没有被社会承认是“人类”。槙岛圣护决定要研究与目前的社会所不同的，自己以至人类的价值所在。&lt;/p&gt;

&lt;h2&gt;西比拉系统的真相&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;“成为西比拉系统成员的最重要的资格要求是，必须拥有不同于既存人类规范的异常人格，能以非人类的眼光来俯瞰裁定人类的行为。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;随着故事发展，西比拉系统的真相也被揭开。西比拉系统实际上是大量的具有免罪体质的人类大脑的集合体，拥有自己的作为集合体的思想。也就是说，如果西比拉系统是在“统治”着整个社会，那么仍然是“人”在“统治”着整个社会。但西比拉系统自己认为，“他们”早已是超越人类之上的存在，不能再定义为“人类”。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/used-images/posts/201303/sibyl_system.jpg&quot; title=&quot;西比拉系统&quot; alt=&quot;西比拉系统&quot; /&gt;&lt;/p&gt;

&lt;p&gt;依照西比拉系统自身给出的理论，单纯的改善系统，使系统复杂化，是无法实现完美的。所以，换一个角度考虑，得出的结论就是，将系统无法管理的特异者集合在一起，并从中分析寻求出一种共存的手段，便可以得到管理社会的正确的方法。西比拉系统通过不断的吸纳那些与一般人有明显的差距的拥有崭新思想和价值观的人加入，使自己思考的幅度不断扩张，并由此不断进化。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;“理想的官吏，借用马克斯·韦伯的话来说，就是既不会愤怒，也不会不公，既没有憎恨，也没有激情，既没有爱，也不会狂热，自始至终只履行自身义务的人。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;从社会学的角度来说，西比拉系统可以说是法制社会的一种极致。考虑一下法制社会，我们理想的情况是，法律完善，在法律面前，所有人都要平等接受审判，法律规定了什么是正确的，什么是不正确的，什么样的行为是犯罪行为。在法制社会，不容许个人主观认定犯罪。而另一方面，法制社会中的法律终归是由人制定，由人来确保执行力，而且体现的也是多数人所能共同认可的内容。结合西比拉系统这个人类大脑的集合体来说，是不是确实有很多相似的地方？&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;“系统这东西，比起让其完美地运行，一直相信其是完美的这一点更加重要。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;法制社会中的法律，是无法完善到能正确处理社会生活的每一个细节的。而类似的西比拉系统，也因为免罪体质者的存在，不能认为是完美的。但是，相比于法律世界的辩护和裁决，西比拉系统“看上去”更像是一个只机械化履行义务的符合理想需要的&lt;em&gt;秩序管理者&lt;/em&gt;。人们相信并依赖西比拉系统，才因此有了目前的繁荣和稳定的社会。&lt;/p&gt;

&lt;h2&gt;终局&lt;/h2&gt;

&lt;p&gt;狡啮慎也与槙岛圣护，最终都以自己的个人意志，结束了两人之间的对决。善与恶，是与非，此时都已不再重要，他们都以行动贯彻了自己所坚持的信念，即使是在这个充满秩序的社会中被认为是错误的道路，他们也决心要走下去。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/used-images/posts/201303/members_on.jpg&quot; title=&quot;刑事科一班&quot; alt=&quot;刑事科一班&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一切都结束之后，已经成长为出色可靠的监视官的常守朱，来了西比拉系统的面前。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;“不要小看人类，我们无论何时都在追求着更好的社会，总会有一天有人来关掉这个房间的电源，一定会找到崭新的道路给你看。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;作为这个社会基石的西比拉系统依然存在。至少，目前的社会还不能失去西比拉系统。但是，常守朱坚信着一个不一样的未来。&lt;/p&gt;

&lt;p&gt;依然是一场大雨，以及被封锁的案件现场。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;“我是即日起被配属于刑事科的霜月美佳，请多多指教。”&lt;/p&gt;

&lt;p&gt;“抱歉，我们刑事科现在非常缺人，虽然我们会帮助你，但没工夫把你作为新人看待了。”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;常守朱冷静地回答道。仍然是刑事科一班，但一切却又变得那么不同。常守朱带领下的刑事科一班的故事还将继续。&lt;/p&gt;

&lt;p&gt;进化着的西比拉系统，以及始终追求着更好社会的人类。社会秩序与人类意志的碰撞下，未来究竟又会如何呢？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;（注：PSYCHO-PASS，译为心理测量者，2012年10月番，一共22集，是动画公司Production I.G制作的原创动画）&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>简单实现固定在页面底部的页脚</title>
   <link href="http://acgtofe.com/posts/2013/03/sticky-footer"/>
   <updated>2013-03-13T00:00:00+08:00</updated>
   <id>http://acgtofe.com/posts/2013/03/sticky-footer</id>
   <content type="html">&lt;h2&gt;页脚的位置问题&lt;/h2&gt;

&lt;p&gt;网页的页脚（footer），也就是通常用来放置帮助链接及版权信息的地方。页脚自然是应该位于页面底部的，但依照一般的做法，如果位于页脚之前的网页内容比较少，或者说使用了一个垂直分辨率较大的显示器，就有可能出现页脚看起来不在页面底部的情况，如下图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/used-images/posts/201303/footer_distance.jpg&quot; title=&quot;页面内容不足的时候，页脚将不能贴到底部&quot; alt=&quot;页脚不能贴到底部&quot; /&gt;&lt;/p&gt;

&lt;p&gt;由于页脚基本上是一个网站的所有页面公用的部分，不同页面的内容量有所差异，因此确实有可能某些页面内容不够而出现这样的问题。另外，尤其是包含了底色的页脚，发生这种问题会很影响美观。&lt;/p&gt;

&lt;p&gt;所以，我们希望页脚能够&lt;em&gt;无论网页内容量多少，都准确地位于底部&lt;/em&gt;。&lt;/p&gt;

&lt;h2&gt;固定页脚到底部的方法&lt;/h2&gt;

&lt;h3&gt;绝对定位可行吗？&lt;/h3&gt;

&lt;p&gt;也许有人想到过把页脚设置为&lt;code&gt;position:fixed&lt;/code&gt;，然后定位在底部。先不考虑不支持这个属性值的IE6，从效果上说，如果网页本身内容就很充足，这样的写法就会让页脚一开始就出现在浏览器的底部，而在滚动网页时，页脚会一直保持原位置。这样的效果，显然对大部分的网站都是不适宜的。&lt;/p&gt;

&lt;p&gt;可以想见，我们需要的效果是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;网页内容较多时，在滚动到底部的时候才看到位于最下方的页脚。&lt;/li&gt;
&lt;li&gt;网页内容较少时，页脚仍然位于整个页面的最下方，其余部分留白。&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;常规、简单的实现方法&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://ryanfait.com/sticky-footer/&quot; title=&quot;A CSS Sticky Footer&quot;&gt;CSS Sticky Footer&lt;/a&gt;提供了这个固定页脚在底部的合理的实现方法。不过一方面这是一个英文站点，另一方面它所提供的写法还存在些许可以改善的地方，所以本文会参考它的内容，给出一个合理的实现方法。&lt;/p&gt;

&lt;p&gt;首先需要这样一个html结构：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--网页内容--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;footer_placeholder&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;footer&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--页脚--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;div.wrapper&lt;/code&gt;是网页中除页脚之外的所有内容的外层容器，页脚&lt;code&gt;div.footer&lt;/code&gt;和它位于同一层级。&lt;code&gt;div.footer_placeholder&lt;/code&gt;必须放在网页所有内容的最后，即作为&lt;code&gt;div.wrapper&lt;/code&gt;的最后一个子元素，它的作用会在后文中说明。&lt;/p&gt;

&lt;p&gt;接下来写css，依次做说明。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当网页内容不足的时候，&lt;code&gt;body&lt;/code&gt;和&lt;code&gt;html&lt;/code&gt;的实际高度可能小于浏览器的可视范围，因此给&lt;code&gt;body&lt;/code&gt;和&lt;code&gt;html&lt;/code&gt;写上高度100%。此外，接下来的直接子元素也会使用百分比的写法，百分比的写法必须在直接父元素有确定的高度定义时才有效。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;min-height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;120px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;/*假定页脚的高度为120px*/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所有网页内容都在这个&lt;code&gt;div.wrapper&lt;/code&gt;中，定义最小高度（IE6使用hack），由于这个元素的父元素就是定义了100%高度的&lt;code&gt;body&lt;/code&gt;，因此无论内容多少，&lt;code&gt;div.wrapper&lt;/code&gt;这个元素的高度都会占据整个浏览器可视范围。然后，依照页脚的高度，设置相等的下边距负值，这样页脚就会恰好出现在页面内容的最后。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.footer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.footer_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;120px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/*假定页脚的高度为120px*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;div.footer_placeholder&lt;/code&gt;，如字面意义，页脚的占位元素，它只是一个空的&lt;code&gt;div&lt;/code&gt;，定义高度和页脚相同，它的存在是为了给页脚留下位置。如果没有它，可能会发生这样的事情↓&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/used-images/posts/201303/footer_placeholder.jpg&quot; title=&quot;页脚占位符的作用&quot; alt=&quot;页脚占位符的作用&quot; /&gt;&lt;/p&gt;

&lt;p&gt;到这里，&lt;em&gt;固定在底部的页脚就已经实现了&lt;/em&gt;。css部分合起来是：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;min-height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;120px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;/*假定页脚的高度为120px*/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.footer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.footer_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;120px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果还需要考虑css初始化和清理浮动，可能你还需要添加下面这部分css：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.footer_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;both&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;你现在正在看的本博客，就使用了本文的方法，以保证无论内容多少，页脚都能位于页面底部。我也觉得这是一个非常实用的方法！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>acgtofe博客建设完结纪念</title>
   <link href="http://acgtofe.com/posts/2013/03/acgtofe-complete"/>
   <updated>2013-03-12T00:00:00+08:00</updated>
   <id>http://acgtofe.com/posts/2013/03/acgtofe-complete</id>
   <content type="html">&lt;p&gt;到写下这段文字时，本博客也宣布初步完工。&lt;/p&gt;

&lt;p&gt;本博客的名字是acgtofe，如简介介绍的那样，我会在这里发布有关动漫、游戏、前端技术的博文，你也许看到了demo pages，这是我最开始构思博客的时候觉得可以加入的内容，字面意思理解的话，就是指实例，不过之后具体会是什么，我还在思考中，所以敬请期待。这也是为什么只说本博客是初步完工。&lt;/p&gt;

&lt;p&gt;说起来，把动漫和前端技术结合起来放在一起，还拼凑了这么一个名字，真是预想不到呢。ACG已经是一个很多人都知道的词了，而这个to虽然我是想说就是表示什么“和”什么，不过现在看来，单纯理解为英文介词to也不错...而FE所指的前端开发（Frond-End），相对来说就很少会有人知道了。这也难免，前端开发一词用作职业描述，已经算是比较新的事了。我自己则是前一段时间看国外的博文，偶然看到了这个词，然后查询了一下，才知道这个意思。有没有觉得，中文的翻译特别的直接？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/used-images/posts/201303/bookmark_start.jpg&quot; title=&quot;acgtofe博客建设完结纪念&quot; alt=&quot;acgtofe博客建设完结纪念&quot; /&gt;&lt;/p&gt;

&lt;p&gt;“爱好ACG并从事web前端工作”，参考这样的描述，所以我做了这样的一个博客。希望本博客的内容，无论是对作为ACG同好的你，还是在从事前端工作的你，都能带来一些有用的信息，或者是有学习价值的知识，也或者是一点点的生活乐趣。&lt;/p&gt;

&lt;p&gt;本博客通过&lt;a href=&quot;http://jekyllbootstrap.com/&quot; title=&quot;Jekyll Bootstrap&quot;&gt;Jekyll Bootstrap&lt;/a&gt;搭建，如果你也对做这样的一个博客有兴趣，可以自己搜索相关的介绍信息及教程。&lt;/p&gt;

&lt;p&gt;博客建设完结，撒花！&lt;/p&gt;
</content>
 </entry>
 
 
</feed>